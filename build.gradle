plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '9.22.3'
    id 'org.openapi.generator' version '7.2.0'
}

group = 'com.saasplatform'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'
targetCompatibility = '17'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Database
    implementation 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'
    implementation 'com.h2database:h2'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    
    // Workflow Engine
    implementation 'org.camunda.bpm.springboot:camunda-bpm-spring-boot-starter:7.20.0'
    
    // OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    
    // Utilities
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.h2database:h2'
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Fix duplicate JAR entries in bootJar
tasks.named('bootJar') {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Ensure all tasks use Java 17
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

// OpenAPI generation
openApiGenerate {
    generatorName = "typescript-axios"
    inputSpec = "$projectDir/src/main/resources/openapi.yaml"
    outputDir = "$rootDir/packages/types"
    configOptions = [
        apiPackage: "api",
        modelPackage: "models",
        supportsES6: true,
        npmName: "@saasplatform/types",
        npmVersion: "1.0.0"
    ]
}

// Flyway configuration
flyway {
    url = System.getenv('DB_URL') ?: 'jdbc:postgresql://localhost:5432/saas_platform'
    user = System.getenv('DB_USER') ?: 'postgres'
    password = System.getenv('DB_PASSWORD') ?: 'postgres'
    locations = ['classpath:db/migration']
}
